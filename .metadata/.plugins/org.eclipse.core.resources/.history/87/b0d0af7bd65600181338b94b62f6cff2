package jrJava.mouseAndMaze;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.GeneralPath;

import jrJava.mouseAndMaze.Point;
import jrJava.mouseAndMaze.Utility;

public class Mouse {

	private Point[] bodyTemplate = {
			new Point(-100, 0), new Point(-80, -120), new Point(50, -100), new Point(100, 0),
			new Point(-100, 0), new Point(-80,  120), new Point(50,  100), new Point(100, 0)
	};
	
	private Point[] earTemplate = {
			new Point(60, -40), new Point(120, -120), new Point(-100, -120), new Point(20, -30),
			new Point(60,  40), new Point(120,  120), new Point(-100,  120), new Point(20,  30)
	};
	
	private Point[] eyeTemplate = { // two centers of the eyes.
			new Point(60, -20),
			new Point(60,  20)
	};
	
	private Point eyeRadius = new Point(8, 8);
	
	private Point[] whiskerTemplate = {
			new Point(80, -15), new Point(80, -45), new Point(100, -90), 
			new Point(85, -10), new Point(85, -35), new Point(100, -60),
			new Point(80,  15), new Point(80,  45), new Point(100,  90), 
			new Point(85,  10), new Point(85,  35), new Point(100,  60)
	};
	
	private Point[] tailTemplate = {
			new Point(-40, 0), new Point(-120, -50), new Point(-50, 40), new Point(-95, 0)
	};
	
	
	
	private Point[] body = new Point[bodyTemplate.length];
	private Point[] ear = new Point[earTemplate.length];
	private Point[] eye = new Point[eyeTemplate.length];
	private Point[] whisker = new Point[whiskerTemplate.length];
	private Point[] tail = new Point[tailTemplate.length];
	
	private int x, y;
	private int xSpeed = 1, ySpeed = 0;
	
	public Mouse(int x, int y){ //x, y center of mouse.
		this.x = x;
		this.y = y;
		
	}
	
	
	public void move(){
		x += xSpeed;
		y += ySpeed;
	}
	
	
	
	public void draw(Graphics graphics){
		Graphics2D g = (Graphics2D) graphics;
		
		Utility.copy(bodyTemplate, body);
		Utility.copy(earTemplate, ear);
		Utility.copy(eyeTemplate, eye);
		Utility.copy(whiskerTemplate, whisker);
		Utility.copy(tailTemplate, tail);
		
		Utility.shift(body, x, y);
		Utility.shift(ear, x, y);
		Utility.shift(eye, x, y);
		Utility.shift(whisker, x, y);
		Utility.shift(tail, x, y);
		
		// body
		GeneralPath bodyPath = new GeneralPath();
		bodyPath.moveTo(body[0].x, body[0].y);
		bodyPath.curveTo(body[1].x, body[1].y, body[2].x, body[2].y, body[3].x, body[3].y);
		bodyPath.moveTo(body[4].x, body[4].y);
		bodyPath.curveTo(body[5].x, body[5].y, body[6].x, body[6].y, body[7].x, body[7].y);
		
		g.setColor(Color.lightGray);
		g.fill(bodyPath);
		g.setColor(Color.black);
		g.draw(bodyPath);
		
		// ear
		GeneralPath earPath = new GeneralPath();
		earPath.moveTo(ear[0].x, ear[0].y);
		earPath.curveTo(ear[1].x, ear[1].y, ear[2].x, ear[2].y, ear[3].x, ear[3].y);
		earPath.moveTo(ear[4].x, ear[4].y);
		earPath.curveTo(ear[5].x, ear[5].y, ear[6].x, ear[6].y, ear[7].x, ear[7].y);
		
		g.setColor(new Color(220, 220, 220));
		g.fill(earPath);
		g.setColor(Color.black);
		g.draw(earPath);
		
		// eye
		g.setColor(Color.green);
		g.fillOval((int)(eye[0].x-eyeRadius.x), (int)(eye[0].y-eyeRadius.y), (int)(2*eyeRadius.x), (int)(2*eyeRadius.y));
		g.fillOval((int)(eye[1].x-eyeRadius.x), (int)(eye[1].y-eyeRadius.y), (int)(2*eyeRadius.x), (int)(2*eyeRadius.y));
		g.setColor(Color.black);
		g.drawOval((int)(eye[0].x-eyeRadius.x), (int)(eye[0].y-eyeRadius.y), (int)(2*eyeRadius.x), (int)(2*eyeRadius.y));
		g.drawOval((int)(eye[1].x-eyeRadius.x), (int)(eye[1].y-eyeRadius.y), (int)(2*eyeRadius.x), (int)(2*eyeRadius.y));
		
		// whisker
		GeneralPath whiskerPath = new GeneralPath();
		whiskerPath.moveTo(whisker[0].x, whisker[0].y);
		whiskerPath.quadTo(whisker[1].x, whisker[1].y, whisker[2].x, whisker[2].y);
		whiskerPath.moveTo(whisker[3].x, whisker[3].y);
		whiskerPath.quadTo(whisker[4].x, whisker[4].y, whisker[5].x, whisker[5].y);
		whiskerPath.moveTo(whisker[6].x, whisker[6].y);
		whiskerPath.quadTo(whisker[7].x, whisker[7].y, whisker[8].x, whisker[8].y);
		whiskerPath.moveTo(whisker[9].x, whisker[9].y);
		whiskerPath.quadTo(whisker[10].x, whisker[10].y, whisker[11].x, whisker[11].y);
		
		g.setColor(Color.red);
		g.draw(whiskerPath);
		
		// tail
		GeneralPath tailPath = new GeneralPath();
		tailPath.moveTo(tail[0].x, tail[0].y);
		tailPath.curveTo(tail[1].x, tail[1].y, tail[2].x, tail[2].y, tail[3].x, tail[3].y);
		g.setColor(Color.black);
		g.draw(tailPath);
	}
	
}










